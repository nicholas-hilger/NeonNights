<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_selecter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>col = 0
row = 0
name = ""
len = 0
nam = ""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rightKey = keyboard_check_pressed(vk_right) or gamepad_button_check_pressed(0,gp_padr)
leftKey = keyboard_check_pressed(vk_left) or gamepad_button_check_pressed(0,gp_padl)
upKey = keyboard_check_pressed(vk_up) or gamepad_button_check_pressed(0,gp_padu)
downKey = keyboard_check_pressed(vk_down) or gamepad_button_check_pressed(0,gp_padd)
aKey = keyboard_check_pressed(ord("Z")) or gamepad_button_check_pressed(0,gp_face1)
bKey = keyboard_check_pressed(ord("X")) or gamepad_button_check_pressed(0,gp_face2)
xKey = keyboard_check_pressed(ord("C")) or gamepad_button_check_pressed(0,gp_face3)

if(rightKey)
{
if(col &lt; 12)
{
x += 40
col++
}
else
{
col = 0
x-= 480
}
audio_play_sound(talkSound,1,0)
}
if(leftKey)
{
if(col &gt; 0 )
{
x -= 40
col--
}
else
{
col = 12
x+= 480
}
audio_play_sound(talkSound,1,0)
}
if(upKey) 
{
if(row &gt; 0)
{
y -= 100
row--
}
else
{
y = 416
row = 3
}
audio_play_sound(talkSound,1,0)
}
if(downKey) 
{
if(row &lt; 3)
{
y += 100
row++
}
else
{
y = 116
row = 0
}
audio_play_sound(talkSound,1,0)
} 

if(aKey and len &lt; 10)
{
audio_play_sound(hit,2,0)
name = string_insert(name,nameBox.alpha[row , col],0)
len++
}
if(bKey and len &gt; 0)
{
audio_play_sound(shot,2,0)
name = string_delete(name,len,1)
len--
} 

if(xKey)
{
global.playName = name
room_goto_next()
instance_create(1008,400,player)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
